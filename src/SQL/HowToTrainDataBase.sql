-- MySQL Script generated by MySQL Workbench
-- 11/12/16 14:06:34
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema HowToTrain
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `HowToTrain` ;

-- -----------------------------------------------------
-- Schema HowToTrain
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `HowToTrain` DEFAULT CHARACTER SET latin1 ;
USE `HowToTrain` ;

-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_grupo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_grupo` (
  `cd_grupo` INT NOT NULL auto_increment,
  `ds_grupo` VARCHAR(45) NULL COMMENT 'tabela referente aos grupos musculares: Abdomen, Biceps, Costas, Coxa, Glúteo, Ombro, Panturrilha, Peito e triceps.\n',
  PRIMARY KEY (`cd_grupo`))
ENGINE = InnoDB
COMMENT = 'Tabela que irá conter os grupos musculares';


-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_exercicio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_exercicio` (
  `cd_exercicio` INT NOT NULL auto_increment,
  `ds_nome_exercicio` TEXT NULL,
  `ds_nome_logico_exercicio` TEXT NULL COMMENT 'Nome cadastrado referente as animações \".GIF\"',
  `ds_exercicio` TEXT NULL,
  `cd_grupo` INT NOT NULL,
  PRIMARY KEY (`cd_exercicio`),
  CONSTRAINT `fk_tb_exercicio_tb_grupo`
    FOREIGN KEY (`cd_grupo`)
    REFERENCES `HowToTrain`.`tb_grupo` (`cd_grupo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela que irá conter todos os exercícios cadastrados.\n';

CREATE INDEX `fk_tb_exercicio_tb_grupo_idx` ON `HowToTrain`.`tb_exercicio` (`cd_grupo` ASC);


-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_treino`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_treino` (
  `cd_treino` INT NOT NULL auto_increment,
  `ds_treino` TEXT NULL,
  `ds_caminho_foto` TEXT NULL COMMENT 'Nome referente a foto a quem o treino pertence, exemplo treino do arnold, foto do arnold.\n',
  `fg_carga` TINYINT(1) NULL COMMENT 'Indica se é um treino automático, ou se foi cadastrado pelo usuário.\n',
  `ind_tipo_treino` INT NULL COMMENT 'Definição    - 0\nForça	   - 1\nHipertrofia  - 2\nResistencia - 3',
  `ind_nivel_treino` INT NULL COMMENT 'Iniciante 	 - 0\nIntermediario - 1\nAvançado 	 - 2',
  `ind_sexo` INT NULL COMMENT '0 - Feminino\n1 - Masculino',
  `fg_treinando` TINYINT(1) NULL,
  `cd_grupo` INT NOT NULL,
  PRIMARY KEY (`cd_treino`),
  CONSTRAINT `fk_tb_treino_tb_grupo1`
    FOREIGN KEY (`cd_grupo`)
    REFERENCES `HowToTrain`.`tb_grupo` (`cd_grupo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela que irá conter todos os treinos cadastrados, treinos que podem ser cadastrados pelo usuário, ou que vem junto com o app.\n';

CREATE INDEX `fk_tb_treino_tb_grupo1_idx` ON `HowToTrain`.`tb_treino` (`cd_grupo` ASC);


-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_treino_exercicio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_treino_exercicio` (
  `cd_treino_exercicio` INT NOT NULL auto_increment,
  `nr_ordem` INT NULL,
  `cd_exercicio` INT NOT NULL,
  `cd_treino` INT NOT NULL,
  PRIMARY KEY (`cd_treino_exercicio`),
  CONSTRAINT `fk_tb_treino_exercicio_tb_exercicio1`
    FOREIGN KEY (`cd_exercicio`)
    REFERENCES `HowToTrain`.`tb_exercicio` (`cd_exercicio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_treino_exercicio_tb_treino1`
    FOREIGN KEY (`cd_treino`)
    REFERENCES `HowToTrain`.`tb_treino` (`cd_treino`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela que irá conter o relacionamento de treino e execicios';

CREATE INDEX `fk_tb_treino_exercicio_tb_exercicio1_idx` ON `HowToTrain`.`tb_treino_exercicio` (`cd_exercicio` ASC);

CREATE INDEX `fk_tb_treino_exercicio_tb_treino1_idx` ON `HowToTrain`.`tb_treino_exercicio` (`cd_treino` ASC);


-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_musculo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_musculo` (
  `cd_musculo` INT NOT NULL auto_increment,
  `ds_musculo` TEXT NULL,
  PRIMARY KEY (`cd_musculo`))
ENGINE = InnoDB
COMMENT = 'Tabela referente a cada músculos do corpo.\n';


-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_musculu_exercicio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_musculu_exercicio` (
  `cd_musculo_exercicio` INT NOT NULL auto_increment,
  `ind_primario_secundario` INT NULL COMMENT '1 - Músculo primário\n2 - Músculo secundário',
  `cd_musculo` INT NOT NULL,
  `cd_exercicio` INT NOT NULL,
  PRIMARY KEY (`cd_musculo_exercicio`),
  CONSTRAINT `fk_tb_musculu_exercicio_tb_musculo1`
    FOREIGN KEY (`cd_musculo`)
    REFERENCES `HowToTrain`.`tb_musculo` (`cd_musculo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_musculu_exercicio_tb_exercicio1`
    FOREIGN KEY (`cd_exercicio`)
    REFERENCES `HowToTrain`.`tb_exercicio` (`cd_exercicio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela que vincula um determinado músculo a um determinando exercício.\n';

CREATE INDEX `fk_tb_musculu_exercicio_tb_musculo1_idx` ON `HowToTrain`.`tb_musculu_exercicio` (`cd_musculo` ASC);

CREATE INDEX `fk_tb_musculu_exercicio_tb_exercicio1_idx` ON `HowToTrain`.`tb_musculu_exercicio` (`cd_exercicio` ASC);


-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_treino_exercicio_repeticao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_treino_exercicio_repeticao` (
  `nr_repeticoes` INT NULL,
  `cd_treino_exercicio` INT NOT NULL auto_increment,
  PRIMARY KEY (`cd_treino_exercicio`),
  CONSTRAINT `fk_tb_treino_exercicio_repeticao_tb_treino_exercicio1`
    FOREIGN KEY (`cd_treino_exercicio`)
    REFERENCES `HowToTrain`.`tb_treino_exercicio` (`cd_treino_exercicio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Tabela que irá conter todas as repetições de um determinado exercício em um determinado treino.';


-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_pais`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_pais` (
  `cd_pais` INT NOT NULL auto_increment,
  `ds_pais` VARCHAR(100) NULL,
  PRIMARY KEY (`cd_pais`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_estado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_estado` (
  `cd_estado` INT NOT NULL auto_increment,
  `ds_estado` VARCHAR(100) NULL,
  `cd_pais` INT NOT NULL,
  PRIMARY KEY (`cd_estado`, `cd_pais`),
  CONSTRAINT `fk_tb_estado_tb_pais1`
    FOREIGN KEY (`cd_pais`)
    REFERENCES `HowToTrain`.`tb_pais` (`cd_pais`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_tb_estado_tb_pais1_idx` ON `HowToTrain`.`tb_estado` (`cd_pais` ASC);



-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_cidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_cidade` (
  `cd_cidade` INT NOT NULL auto_increment,
  `ds_cidade` VARCHAR(100) NULL,
  `cd_estado` INT NOT NULL,
  PRIMARY KEY (`cd_cidade`, `cd_estado`),
  CONSTRAINT `fk_tb_cidade_tb_estado1`
    FOREIGN KEY (`cd_estado`)
    REFERENCES `HowToTrain`.`tb_estado` (`cd_estado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_tb_cidade_tb_estado1_idx` ON `HowToTrain`.`tb_cidade` (`cd_estado` ASC);


-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_endereco` (
  `cd_endereco` INT NOT NULL auto_increment,
  `ds_uf` VARCHAR(2) NULL,
  `ds_cidade` VARCHAR(255) NULL,
  `ds_bairro` VARCHAR(255) NULL,
  `ds_endereco` VARCHAR(255) NULL,
  `cd_cidade` INT NOT NULL,
  `nr_cep` varchar(20) NOT NULL,
  PRIMARY KEY (`cd_endereco`),
  CONSTRAINT `fk_tb_endereco_tb_cidade1`
    FOREIGN KEY (`cd_cidade`)
    REFERENCES `HowToTrain`.`tb_cidade` (`cd_cidade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'cd_cidade para o banco online, ds_cidade, ds..etc para o banco interno do app.';

CREATE INDEX `fk_tb_endereco_tb_cidade1_idx` ON `HowToTrain`.`tb_endereco` (`cd_cidade` ASC);


-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_registro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_registro` (
  `cd_registro` INT NOT NULL auto_increment,
  `cd_endereco` INT NOT NULL,
  `ds_nome` VARCHAR(220) NULL,
  `ind_registro` INT NULL COMMENT '1 - Aluno\n2 - Professor\n3 - Academia',
  `fg_excluido` INT NULL,
  `dt_inclusao` DATETIME NULL,
  `dt_alteracao` DATETIME NULL,
  `dt_ultima_utilizacao` DATETIME NULL,
  PRIMARY KEY (`cd_registro`),
  CONSTRAINT `fk_tb_registro_tb_endereco1`
    FOREIGN KEY (`cd_endereco`)
    REFERENCES `HowToTrain`.`tb_endereco` (`cd_endereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_tb_registro_tb_endereco1_idx` ON `HowToTrain`.`tb_registro` (`cd_endereco` ASC);


-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_pessoa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_pessoa` (
  `cd_pessoa` INT NOT NULL auto_increment,
  `dt_nascimento` DATETIME NULL,
  `ind_sexo` INT NULL COMMENT '0 - Feminino\n1 - Masculino',
  `fg_professor` TINYINT(1) NULL,
  `cd_registro` INT NOT NULL,
  PRIMARY KEY (`cd_pessoa`),
  CONSTRAINT `fk_tb_pessoa_tb_registro1`
    FOREIGN KEY (`cd_registro`)
    REFERENCES `HowToTrain`.`tb_registro` (`cd_registro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_tb_pessoa_tb_registro1_idx` ON `HowToTrain`.`tb_pessoa` (`cd_registro` ASC);


-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_academia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_academia` (
  `cd_academia` INT NOT NULL auto_increment,
  `cd_academia_externo` INT NULL,
  `fg_ativo` TINYINT(1) NULL,
  `cd_registro` INT NOT NULL,
  PRIMARY KEY (`cd_academia`),
  CONSTRAINT `fk_tb_academia_tb_registro1`
    FOREIGN KEY (`cd_registro`)
    REFERENCES `HowToTrain`.`tb_registro` (`cd_registro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_tb_academia_tb_registro1_idx` ON `HowToTrain`.`tb_academia` (`cd_registro` ASC);


-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_professor` (
  `cd_professor` INT NOT NULL auto_increment,
  `cd_professor_externo` INT NULL,
  `nr_anos_lecionando` INT NULL,
  `cd_pessoa` INT NOT NULL,
  PRIMARY KEY (`cd_professor`, `cd_pessoa`),
  CONSTRAINT `fk_tb_professor_tb_pessoa1`
    FOREIGN KEY (`cd_pessoa`)
    REFERENCES `HowToTrain`.`tb_pessoa` (`cd_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_tb_professor_tb_pessoa1_idx` ON `HowToTrain`.`tb_professor` (`cd_pessoa` ASC);


-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_aluno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_aluno` (
  `cd_aluno` INT NOT NULL auto_increment,
  `cd_aluno_externo` INT NULL,
  `nr_peso` DECIMAL(10,0) NULL,
  `ind_condicao_fisica` INT NULL COMMENT '0 - Sedentário\n1 - Fora de forma\n2 - Em forma\n3 - Realmente em forma',
  `ind_tipo_treino` INT NULL COMMENT '0 - Definição\n1 - Resistencia\n2 - Força\n3 - Hipertrofia \n',
  `ind_nivel_experiencia` INT NULL COMMENT '1 - Menos de um ano\n2 - Até dois anos\n3 - Mais de dois anos',
  `cd_pessoa` INT NOT NULL,
  `cd_academia` INT NOT NULL,
  `cd_professor` INT NOT NULL,
  PRIMARY KEY (`cd_aluno`, `cd_academia`),
  CONSTRAINT `fk_tb_usuario_tb_academia1`
    FOREIGN KEY (`cd_academia`)
    REFERENCES `HowToTrain`.`tb_academia` (`cd_academia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_usuario_tb_pessoa1`
    FOREIGN KEY (`cd_pessoa`)
    REFERENCES `HowToTrain`.`tb_pessoa` (`cd_pessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_usuario_tb_professor1`
    FOREIGN KEY (`cd_professor`)
    REFERENCES `HowToTrain`.`tb_professor` (`cd_professor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_tb_usuario_tb_academia1_idx` ON `HowToTrain`.`tb_aluno` (`cd_academia` ASC);

CREATE INDEX `fk_tb_usuario_tb_pessoa1_idx` ON `HowToTrain`.`tb_aluno` (`cd_pessoa` ASC);

CREATE INDEX `fk_tb_usuario_tb_professor1_idx` ON `HowToTrain`.`tb_aluno` (`cd_professor` ASC);


-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_academia_has_tb_professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_academia_has_tb_professor` (
  `cd_academia_professor` INT NOT NULL auto_increment,
  `cd_academia` INT NOT NULL,
  `cd_professor` INT NOT NULL,
  PRIMARY KEY (`cd_academia_professor`, `cd_academia`, `cd_professor`),
  CONSTRAINT `fk_tb_academia_has_tb_professor_tb_academia1`
    FOREIGN KEY (`cd_academia`)
    REFERENCES `HowToTrain`.`tb_academia` (`cd_academia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_academia_has_tb_professor_tb_professor1`
    FOREIGN KEY (`cd_professor`)
    REFERENCES `HowToTrain`.`tb_professor` (`cd_professor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_tb_academia_has_tb_professor_tb_professor1_idx` ON `HowToTrain`.`tb_academia_has_tb_professor` (`cd_professor` ASC);

CREATE INDEX `fk_tb_academia_has_tb_professor_tb_academia1_idx` ON `HowToTrain`.`tb_academia_has_tb_professor` (`cd_academia` ASC);


CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_tipo_treino` (
  `cd_tipo_treino` INT NOT NULL AUTO_INCREMENT,
  `ds_tipo_treino` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`cd_tipo_treino`),
  UNIQUE INDEX `cd_tipo_treinocol_UNIQUE` (`ds_tipo_treino` ASC))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_plano_treino`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_plano_treino` (
  `cd_plano_treino` INT NOT NULL auto_increment,
  `ds_plano_treino` VARCHAR(220) NULL,
  `ind_tipo_treino` INT NULL COMMENT 'Igual ao da tabela de treino\n',
  `nr_dias` INT NULL COMMENT 'Quantidade de dias referentes a quanto tempo esse plano de treino deve ser executado.',
  `cd_professor` INT NOT NULL,
  PRIMARY KEY (`cd_plano_treino`, `cd_professor`),
  CONSTRAINT `fk_tb_plano_treino_tb_professor1`
    FOREIGN KEY (`cd_professor`)
    REFERENCES `HowToTrain`.`tb_professor` (`cd_professor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
	CONSTRAINT `fk_tb_plano_treino_tb_tipo_treino`
	FOREIGN KEY (`ind_tipo_treino`)
	REFERENCES `HowToTrain`.`tb_tipo_treino` (`cd_tipo_treino`)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION)
ENGINE = InnoDB;

    

-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_plano_treino_has_tb_treino`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_plano_treino_has_tb_treino` (
  `cd_plano_treino` INT NOT NULL auto_increment,
  `cd_treino` INT NOT NULL,
  PRIMARY KEY (`cd_plano_treino`, `cd_treino`),
  CONSTRAINT `fk_tb_plano_treino_has_tb_treino_tb_plano_treino1`
    FOREIGN KEY (`cd_plano_treino`)
    REFERENCES `HowToTrain`.`tb_plano_treino` (`cd_plano_treino`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_plano_treino_has_tb_treino_tb_treino1`
    FOREIGN KEY (`cd_treino`)
    REFERENCES `HowToTrain`.`tb_treino` (`cd_treino`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_tb_plano_treino_has_tb_treino_tb_treino1_idx` ON `HowToTrain`.`tb_plano_treino_has_tb_treino` (`cd_treino` ASC);

CREATE INDEX `fk_tb_plano_treino_has_tb_treino_tb_plano_treino1_idx` ON `HowToTrain`.`tb_plano_treino_has_tb_treino` (`cd_plano_treino` ASC);


-- -----------------------------------------------------
-- Table `HowToTrain`.`tb_aluno_has_tb_plano_treino`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `HowToTrain`.`tb_aluno_has_tb_plano_treino` (
  `cd_aluno` INT NOT NULL auto_increment,
  `cd_plano_treino` INT NOT NULL,
  PRIMARY KEY (`cd_aluno`, `cd_plano_treino`),
  CONSTRAINT `fk_tb_aluno_has_tb_plano_treino_tb_aluno1`
    FOREIGN KEY (`cd_aluno`)
    REFERENCES `HowToTrain`.`tb_aluno` (`cd_aluno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tb_aluno_has_tb_plano_treino_tb_plano_treino1`
    FOREIGN KEY (`cd_plano_treino`)
    REFERENCES `HowToTrain`.`tb_plano_treino` (`cd_plano_treino`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_tb_aluno_has_tb_plano_treino_tb_plano_treino1_idx` ON `HowToTrain`.`tb_aluno_has_tb_plano_treino` (`cd_plano_treino` ASC);

CREATE INDEX `fk_tb_aluno_has_tb_plano_treino_tb_aluno1_idx` ON `HowToTrain`.`tb_aluno_has_tb_plano_treino` (`cd_aluno` ASC);



DELIMITER $$
--
-- Procedimentos
--
DROP PROCEDURE IF EXISTS `pr_cidade_inclui_altera`$$
CREATE  PROCEDURE `pr_cidade_inclui_altera`(IN p_ds_cidade VARCHAR(220), IN p_cd_estado INT, OUT p_ultimo_cd_usado INT)
begin

    SET p_ultimo_cd_usado = (select cd_cidade from tb_cidade where ds_cidade = p_ds_cidade);

    IF(ISNULL(p_ultimo_cd_usado)) THEN -- Se não existe, insere
        INSERT INTO tb_cidade (ds_cidade,cd_estado) VALUES(p_ds_cidade,p_cd_estado);
        SET p_ultimo_cd_usado = LAST_INSERT_ID();
    ELSE -- se existe altera
        UPDATE tb_cidade
        SET ds_cidade = p_ds_cidade,
            cd_estado = p_cd_estado
        WHERE cd_estado = p_ultimo_cd_usado;
    END IF;
    -- Devolve o ID correspondente
end$$

DROP PROCEDURE IF EXISTS `pr_estado_inclui_altera`$$
CREATE PROCEDURE `pr_estado_inclui_altera`(IN p_ds_estado VARCHAR(220), OUT p_ultimo_cd_usado INT)
begin

    SET p_ultimo_cd_usado = (select cd_estado from tb_estado where ds_estado = p_ds_estado);

    IF(ISNULL(p_ultimo_cd_usado)) THEN -- Se não existe, insere
        INSERT INTO tb_estado (ds_estado,cd_pais) VALUES(p_ds_estado,1);
        SET p_ultimo_cd_usado = LAST_INSERT_ID();
    ELSE -- se existe altera
        UPDATE tb_estado
        SET ds_estado = p_ds_estado,
            cd_pais = 1
        WHERE cd_estado = p_ultimo_cd_usado;
    END IF;
    -- Devolve o ID correspondente
end$$



DELIMITER ;



SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
